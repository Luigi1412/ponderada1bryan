<%- contentFor('body') %>

<!-- Header -->
<div class="md:flex md:items-center md:justify-between mb-6">
    <div class="flex-1 min-w-0">
        <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate" id="form-title">
            Novo Usuário
        </h2>
    </div>
</div>

<!-- Form -->
<div class="bg-white shadow rounded-lg">
    <form id="user-form" class="space-y-6 p-6">
        <div>
            <label for="nome" class="block text-sm font-medium text-gray-700">Nome <span class="text-red-500">*</span></label>
            <input type="text" name="nome" id="nome" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Digite o nome completo">
        </div>

        <div>
            <label for="email" class="block text-sm font-medium text-gray-700">Email <span class="text-red-500">*</span></label>
            <input type="email" name="email" id="email" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="exemplo@email.com">
        </div>

        <div>
            <label for="senha" class="block text-sm font-medium text-gray-700">Senha</label>
            <input type="password" name="senha" id="senha" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Deixe em branco para não alterar">
            <p class="mt-1 text-sm text-gray-500" id="senha-help">A senha é necessária ao criar um novo usuário.</p>
        </div>

        <div class="flex justify-end space-x-3 pt-4 border-t">
            <a href="/users" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Cancelar</a>
            <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700">Salvar</button>
        </div>
</form>
</div>

<script>
    const form = document.getElementById('user-form');
    const formTitle = document.getElementById('form-title');
    const userId = window.location.pathname.split('/').pop();
    const isEditing = window.location.pathname.includes('editar-usuario');

    if (isEditing) {
        formTitle.textContent = 'Editar Usuário';
        document.getElementById('senha-help').textContent = 'Deixe a senha em branco para não alterá-la.';
        loadUser(userId);
    } else {
        document.getElementById('senha').required = true;
    }

    async function loadUser(id) {
        try {
            const response = await fetch(`/api/users/${id}`);
            if (!response.ok) throw new Error('Erro ao carregar usuário');
            const user = await response.json();
            document.getElementById('nome').value = user.nome;
            document.getElementById('email').value = user.email;
        } catch (error) {
            showToast('Erro ao carregar dados do usuário', 'error');
            setTimeout(() => window.location.href = '/users', 2000);
        }
    }

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = {
            nome: document.getElementById('nome').value.trim(),
            email: document.getElementById('email').value.trim(),
            senha: document.getElementById('senha').value,
        };

        if (!isEditing && !formData.senha) {
            showToast('O campo senha é obrigatório ao criar um usuário.', 'error');
            return;
        }
        
        if (!formData.senha) {
            delete formData.senha;
        }

        try {
            const url = isEditing ? `/api/users/${userId}` : '/api/users';
            const method = isEditing ? 'PUT' : 'POST';

            const response = await fetch(url, {
                method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Erro ao salvar usuário');
            }

            showToast(isEditing ? 'Usuário atualizado!' : 'Usuário criado!');
            setTimeout(() => window.location.href = '/users', 1500);
        } catch (error) {
            showToast(error.message || 'Erro ao salvar usuário', 'error');
        }
    });
</script>