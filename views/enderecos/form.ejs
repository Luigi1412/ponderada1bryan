<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2"><%= endereco ? 'Editar Endereço' : 'Novo Endereço' %></h1>
</div>
<p>Preencha os campos abaixo para criar ou editar um endereço.</p>

<form action="<%= endereco ? '/api/enderecos/api/' + endereco.id : '/api/enderecos/api' %>" method="POST" id="endereco-form" class="needs-validation" novalidate>
    <div class="row g-3 mb-3">
        <div class="col-12">
            <label for="user_id" class="form-label fw-bold">Usuário</label>
            <select class="form-select" id="user_id" name="user_id" required>
                <option value="">Carregando usuários...</option>
            </select>
            <div class="invalid-feedback">
                Por favor, selecione um usuário.
            </div>
        </div>
    </div>

    <div class="card p-3">
        <h5 class="card-title mb-3">Detalhes do Endereço</h5>
        <div class="row g-3">
            <div class="col-md-9">
                <label for="rua" class="form-label fw-bold">Rua</label>
                <input type="text" class="form-control" id="rua" name="rua" placeholder="Ex: Av. Paulista" value="<%= locals.endereco ? endereco.rua : '' %>" required>
                <div class="invalid-feedback">O nome da rua é obrigatório.</div>
            </div>
            <div class="col-md-3">
                <label for="numero" class="form-label fw-bold">Número</label>
                <input type="text" class="form-control" id="numero" name="numero" placeholder="Ex: 1000" value="<%= locals.endereco ? endereco.numero : '' %>" required>
                <div class="invalid-feedback">O número é obrigatório.</div>
            </div>
            <div class="col-md-5">
                <label for="cidade" class="form-label fw-bold">Cidade</label>
                <input type="text" class="form-control" id="cidade" name="cidade" placeholder="Ex: São Paulo" value="<%= locals.endereco ? endereco.cidade : '' %>" required>
                <div class="invalid-feedback">A cidade é obrigatória.</div>
            </div>
            <div class="col-md-4">
                <label for="estado" class="form-label fw-bold">Estado</label>
                <input type="text" class="form-control" id="estado" name="estado" placeholder="Ex: SP" value="<%= locals.endereco ? endereco.estado : '' %>" required>
                <div class="invalid-feedback">O estado é obrigatório.</div>
            </div>
            <div class="col-md-3">
                <label for="cep" class="form-label fw-bold">CEP</label>
                <input type="text" class="form-control" id="cep" name="cep" placeholder="Ex: 01310-100" value="<%= locals.endereco ? endereco.cep : '' %>" required>
                <div class="invalid-feedback">O CEP é obrigatório.</div>
            </div>
        </div>
    </div>

    <hr class="my-4">

    <div class="d-flex justify-content-end">
        <a href="/enderecos" class="btn btn-secondary me-2">Cancelar</a>
        <button class="btn btn-primary" type="submit">
            <%= locals.endereco ? 'Atualizar Endereço' : 'Salvar Endereço' %>
        </button>
    </div>
</form>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const isEditing = <%- !!endereco %>;
    const enderecoData = <%- JSON.stringify(endereco || null) %>;

    async function populateUsers() {
        const select = document.getElementById('user_id');
        try {
            const response = await fetch('/api/users');
            if (!response.ok) throw new Error('Erro ao carregar usuários');
            
            const users = await response.json();
            
            select.innerHTML = '<option value="">Selecione um usuário...</option>';
            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user.id;
                option.textContent = `${user.nome} (ID: ${user.id})`;
                select.appendChild(option);
            });

            if (isEditing && enderecoData) {
                select.value = enderecoData.user_id;
            }
        } catch (error) {
            select.innerHTML = '<option value="">Erro ao carregar usuários</option>';
            console.error(error);
        }
    }

    populateUsers();

    const form = document.getElementById('endereco-form');
    form.addEventListener('submit', async function(event) {
        event.preventDefault();
        
        if (!form.checkValidity()) {
            event.stopPropagation();
            form.classList.add('was-validated');
            return;
        }

        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        
        // Assegura que o método PUT seja usado para edição
        const method = isEditing ? 'PUT' : 'POST';
        const actionUrl = form.getAttribute('action');

        try {
            const response = await fetch(actionUrl, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            if (response.ok) {
                window.location.href = '/enderecos';
            } else {
                const result = await response.json();
                alert('Erro ao salvar endereço: ' + (result.error || 'Erro desconhecido'));
            }
        } catch (error) {
            console.error('Erro na submissão:', error);
            alert('Erro de conexão ao salvar o endereço.');
        }
    });
});
</script>