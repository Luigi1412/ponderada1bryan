<%- contentFor('body') %>

<!-- Header -->
<div class="md:flex md:items-center md:justify-between mb-6">
    <div class="flex-1 min-w-0">
        <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
            Projetos
        </h2>
        <p class="mt-1 text-sm text-gray-600">
            Organize suas tarefas em projetos. Crie e gerencie todos os seus projetos aqui.
        </p>
    </div>
    <div class="mt-4 flex md:mt-0 md:ml-4">
        <a href="/novo-projeto" class="ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <i class="fas fa-plus mr-2"></i>
            Novo Projeto
        </a>
    </div>
</div>

<!-- Projects Grid -->
<div class="grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-3" id="projects-container">
    <!-- Projects will be loaded here -->
</div>

<!-- Project Card Template -->
<template id="project-template">
    <div class="project-card bg-white rounded-lg shadow p-6 fade-in">
        <h3 class="text-lg font-medium text-gray-900 project-name mb-2"></h3>
        <p class="text-gray-500 mb-4 project-description line-clamp-3"></p>
        <div class="flex items-center justify-end space-x-3 text-sm border-t pt-4 mt-4">
            <a href="#" class="edit-project text-indigo-600 hover:text-indigo-900">
                <i class="fas fa-edit mr-1"></i>
                Editar
            </a>
            <button class="delete-project text-red-600 hover:text-red-900">
                <i class="fas fa-trash-alt mr-1"></i>
                Excluir
            </button>
        </div>
    </div>
</template>

<script>
    async function loadProjects() {
        try {
            const response = await fetch('/api/projetos');
            if (!response.ok) throw new Error('Erro ao carregar projetos');
            
            const projects = await response.json();
            const container = document.getElementById('projects-container');
            const template = document.getElementById('project-template');
            
            container.innerHTML = '';
            
            if (projects.length === 0) {
                container.innerHTML = `<div class="col-span-full text-center py-12"><p class="text-gray-500">Nenhum projeto encontrado.</p></div>`;
                return;
            }

            projects.forEach(project => {
                const clone = template.content.cloneNode(true);
                
                clone.querySelector('.project-name').textContent = project.nome;
                clone.querySelector('.project-description').textContent = project.descricao;
                
                const editLink = clone.querySelector('.edit-project');
                editLink.href = `/editar-projeto/${project.id}`;

                clone.querySelector('.delete-project').addEventListener('click', async () => {
                    if (confirm('Tem certeza que deseja excluir este projeto?')) {
                        try {
                            const delResponse = await fetch(`/api/projetos/${project.id}`, { method: 'DELETE' });
                            if (!delResponse.ok) throw new Error('Erro ao excluir projeto');
                            showToast('Projeto exclu√≠do com sucesso!');
                            loadProjects();
                        } catch (error) {
                            showToast('Erro ao excluir projeto', 'error');
                        }
                    }
                });

                container.appendChild(clone);
            });
        } catch (error) {
            showToast('Erro ao carregar projetos', 'error');
        }
    }

    document.addEventListener('DOMContentLoaded', loadProjects);
</script>
